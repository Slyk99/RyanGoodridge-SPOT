

function r = quatMultiply(q, p, representation)
    if nargin < 3
        representation = 'scalar_last'; % Default representation
    end
    
    % Ensure input quaternions are column vectors
    q = q(:);
    p = p(:);
    
    if strcmp(representation, 'scalar_first')
        % Scalar-first representation: q = [q0; qv], p = [p0; pv]
        q0 = q(1); qv = q(2:4);
        p0 = p(1); pv = p(2:4);
    else
        % Scalar-last representation: q = [qv; q0], p = [pv; p0]
        qv = q(1:3); q0 = q(4);
        pv = p(1:3); p0 = p(4);
    end
    
    % Quaternion multiplication formula
    r0 = q0*p0 - dot(qv, pv);
    rv = q0*pv + p0*qv + cross(qv, pv);
    
    if strcmp(representation, 'scalar_first')
        r = [r0; rv];
    else
        r = [rv; r0];
    end
    
    % Preserve input shape
    if isrow(q)
        r = r';
    end
end

